name: CD - Deploy to AKS

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  RESOURCE_GROUP_NAME: 'grupawchmurzebackend-rg'
  ACR_NAME: 'grupawchmurzebackendacrregestry'
  AKS_NAME: 'grupawchmurzebackend-aks'
  IMAGE_NAME: ${{ env.ACR_NAME }}.azurecr.io/my-backend-app
  K8S_DEPLOYMENT_NAME: 'grupa-w-chmurze-back-end-deployment'
  K8S_CONTAINER_NAME: 'grupa-w-chmurze-back-end-container'

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Set executable permissions for Maven wrapper
        run: chmod +x ./mvnw

      - name: Build with Maven (skip tests)
        run: ./mvnw -B verify -DskipTests

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io

      - name: Build and push Docker image
        run: |
          docker build . -t ${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to AKS
        run: |
          az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP_NAME }} --name ${{ env.AKS_NAME }} --overwrite-existing

          kubectl create secret generic mongodb-credentials \
            --from-literal=mongo-uri='${{ secrets.MONGO_URI }}' \
            --dry-run=client -o yaml | kubectl apply -f -

          kubectl apply -f deployment.yaml

          # Тепер використовуємо спеціальну команду для оновлення образу
          # Це надійніше, ніж 'sed'
          kubectl set image deployment/${{ env.K8S_DEPLOYMENT_NAME }} ${{ env.K8S_CONTAINER_NAME }}=${{ env.IMAGE_NAME }}:${{ github.sha }}